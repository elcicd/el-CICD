elCicdDefs:
  PORT: "5000"
  REGISTRY_HTTP_ADDR: "0.0.0.0"
  MEMORY: 256Mi
  HTTP_ADDR:
    name: REGISTRY_HTTP_ADDR
    value: ${REGISTRY_HTTP_ADDR}:${PORT}

elCicdDefs-htpasswd:
  ENV:
  - name: REGISTRY_AUTH
    value: htpasswd
  - name: REGISTRY_AUTH_HTPASSWD_REALM
    value: "Registry Realm"
  - name: REGISTRY_AUTH_HTPASSWD_PATH
    value: "/auth/htpasswd"
  - ${HTTP_ADDR}
  VOLUME_MNT_HTPASSWD:
    name: auth-vol
    mountPath: "/auth"
    readOnly: true
  VOLUME_HTPASSWD:
    name: auth-vol
    secret:
      secretName: ${APP_NAME}
      
elCicdDefs-nfs:
  STORAGE_CLASS_NAME: demo-image-registry-nfs
  VOLUME_MNT_NFS:
    name: ${DEMO_IMAGE_REGISTRY}
    mountPath: /var/lib/registry
    subPath: ${APP_NAME}
  VOLUME_NFS:
    name: ${DEMO_IMAGE_REGISTRY}
    persistentVolumeClaim:
      claimName: ${DEMO_IMAGE_REGISTRY}-nfs-pvc

elCicdTemplates:
- templateName: deploymentServiceIngress
  appNames: ${APP_NAMES}
  image: registry
  port: ${PORT}
  env: ${ENV}
  volumeMounts:
  - ${VOLUME_MNT_HTPASSWD}
  - ${VOLUME_MNT_NFS}
  requestsMemory: ${MEMORY}
  limitsMemory: ${MEMORY}
  volumes:
  - ${VOLUME_HTPASSWD}
  - ${VOLUME_NFS}

- templateName: limitRange
  appName: demo-image-registry
  limits:
  - default:
      cpu: 1000m
    defaultRequest:
      cpu: 200m
    type: Container
  
- templateName: secret
  appNames: ${APP_NAMES}
  anyProfiles:
  - htpasswd
  stringData:
    htpasswd: ${${APP_NAME}_HTPASSWD}
    
- templateName: persistentVolume
  appName: ${DEMO_IMAGE_REGISTRY}-nfs
  anyProfiles:
  - nfs
  storageClassName: ${STORAGE_CLASS_NAME}
  storageCapacity: 10Gi
  accessModes:
  - ReadWriteMany
  nfs:
    path: /mnt/${DEMO_IMAGE_REGISTRY}
    server: ${HOST_IP}
    
- templateName: persistentVolumeClaim
  appName: ${DEMO_IMAGE_REGISTRY}-nfs-pvc
  anyProfiles:
  - nfs
  storageClassName: ${STORAGE_CLASS_NAME}
  volumeName: ${DEMO_IMAGE_REGISTRY}-nfs
  accessMode: ReadWriteMany
  storageRequest: 10Gi
    
  
    


