elCicdTemplates-non-prod:
- templateName: configMap
  appNames: ${ONBOARDING_PIPELINES}
  el-cicd-defs-project-onboarding:
    PIPELINE_XML: PROJECT_ONBOARDING_XML
  el-cicd-defs-refresh-credentials:
    PIPELINE_XML: REFRESH_CREDENTIALS_XML
  labels:
    jenkins-pipeline: 'true'
  data: ${ONBOARDING_PIPELINE_DATA}
  
elCicdDefs:
  ONBOARDING_PIPELINES:
  - project-onboarding
  - refresh-credentials
  
  PROJECT_ONBOARDING_XML: |-
    <flow-definition plugin="workflow-job">
      <displayName>${APP_NAME}</displayName>
      <keepDependencies>false</keepDependencies>
      <properties>
        <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty />
        <hudson.model.ParametersDefinitionProperty>
          <parameterDefinitions>
            <hudson.model.StringParameterDefinition>
                <name>PROJECT_ID</name>
                <description>Project ID</description>
                <trim>true</trim>
            </hudson.model.StringParameterDefinition>
          </parameterDefinitions>
        </hudson.model.ParametersDefinitionProperty>
      </properties>
      <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps">
        <script>  
          node() {
              def cicdMetaData = (readJSON(text: sh(returnStdout: true, script: "oc get cm ${env.EL_CICD_META_INFO_NAME} -o json")))

              def scmMap = [$class: 'GitSCMSource',
                            remote: cicdMetaData.data.EL_CICD_GIT_REPO,
                            credentialsId: cicdMetaData.data.EL_CICD_GIT_REPO_READ_ONLY_GITHUB_PRIVATE_KEY_ID]
              library(identifier: "el-CICD@${cicdMetaData.data.EL_CICD_GIT_REPO_BRANCH_NAME}", retriever: modernSCM(scmMap))

              el.initMetaData(cicdMetaData.data)
          }

          def args = [agent: el.cicd.JENKINS_AGENT_DEFAULT,
                      pipelineName: '${APP_NAME}',
                      projectId: params.PROJECT_ID]
          el.node(args) {
              prodProjectOnboarding(args)
          }
        </script>
        <sandbox>true</sandbox>
      </definition>
      <triggers />
      <disabled>false</disabled>
    </flow-definition>

  REFRESH_CREDENTIALS_XML: |-
    <flow-definition plugin="workflow-job">
      <displayName>${APP_NAME}</displayName><flow-definition plugin="workflow-job">
      <keepDependencies>false</keepDependencies>
      <properties>
        <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty />
      </properties>
      <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps">
        <script>
          node() {
              def cicdMetaData = (readJSON(text: sh(returnStdout: true, script: "oc get cm ${env.EL_CICD_META_INFO_NAME} -o json")))

              def scmMap = [$class: 'GitSCMSource',
                            remote: cicdMetaData.data.EL_CICD_GIT_REPO,
                            credentialsId: cicdMetaData.data.EL_CICD_GIT_REPO_READ_ONLY_GITHUB_PRIVATE_KEY_ID]
              library(identifier: "el-CICD@${cicdMetaData.data.EL_CICD_GIT_REPO_BRANCH_NAME}", retriever: modernSCM(scmMap))

              el.initMetaData(cicdMetaData.data)
          }

          def args = [agent: el.cicd.JENKINS_AGENT_DEFAULT,
                      pipelineName: '${APP_NAME}',
                      isNonProd: false]
          el.node(args) {
              refreshCredentials(args)
          }
        </script>
        <sandbox>true</sandbox>
      </definition>
      <triggers />
      <disabled>false</disabled>
    </flow-definition>