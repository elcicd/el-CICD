elCicdDefs-prod:
  PIPELINE_NAME: ${BASE_OBJ_NAME}
  EL_CICD_API_ARGS: |-
    def args = [teamId: '${TEAM_ID}',
                agent: el.cicd.JENKINS_AGENT_DEFAULT,
                pipelineName: '${PIPELINE_NAME}',
                project: params.PROJECT_ID,
                version: params.VERSION_TAG,
                ${EXTRA_PIPELINE_ARGS}]
  VERSION_TAG_PARAM: stringParam('VERSION_TAG', null, "Version")
                
elCicdDefs-deploy-project-to-prod:
  PIPELINE_DESCRIPTION: 'Deploy to production environment'
  EL_CICD_API_METHOD: deployProjectToProd
  EXTRA_PIPELINE_ARGS: |-
    variant: params.VARIANT
  PIPELINE_PARAMS: |-
    parameters {
      ${VERSION_TAG_PARAM}
      stringParam('VARIANT', null, "Variant of version to deploy; e.g. 'east', 'west', 'french', 'english', or 'pre'")
    }
    
elCicdDefs-promote-project-to-prod:
  PIPELINE_DESCRIPTION: 'Promote a release candidate to full release'
  EL_CICD_API_METHOD: promoteProjectToProd
  PIPELINE_PARAMS: |-
    parameters {
      ${VERSION_TAG_PARAM}
    }

elCicdTemplates-prod:
- templateName: configMap
  objNames:
  - deploy-project-to-prod
  - promote-project-to-prod
  mustHaveEveryProfile:
  - prod
  labels:
    teamId: ${TEAM_ID}
    jenkins-pipeline: 'true'
    jenkins-shared-pipeline: 'true'
  data: ${TEAM_PIPELINE_CONFIG_MAP_DATA}