elCicdDefs:
  BUILD_COMPONENT_PIPELINE_LABELS:
    projectid: ${PROJECT_ID}
    component: ${BASE_OBJ_NAME}
    jenkins-pipeline: 'true'
    jenkins-build-pipeline: 'true'
  BUILD_ARTIFACT_PIPELINE_LABELS:
    projectid: ${PROJECT_ID}
    artifact: ${BASE_OBJ_NAME}
    jenkins-pipeline: 'true'
    jenkins-build-pipeline: 'true'
  SHARED_PIPELINE_LABELS:
    projectid: ${PROJECT_ID}
    jenkins-pipeline: 'true'
    jenkins-shared-pipeline: 'true'
  COMMON_BUILD_EL_CICD_API_ARGS: |-
    teamId: '${TEAM_ID}',
    projectId: '${PROJECT_ID}',
    agent: '${CODE_BASE}',
    isBuild: true,
    pipelineName: '${OBJ_NAME}',
    scmBranch: params.SCM_BRANCH
  RELEASE_CANDIDATE_PARAMS: |-
    stringParam('RELEASE_CANDIDATE_TAG', null, '${RELEASE_CANDIDATE_TAG_DESCRIPTION}')
  RELEASE_CANDIDATE_EL_CICD_API_ARGS: |-
    def args = [agent: ${JENKINS_AGENT_DEFAULT},
                pipelineName: '${OBJ_NAME}',,
                teamId: '${TEAM_ID}',
                projectId: ${PROJECT_ID},
                releaseCandidateTag: params.RELEASE_CANDIDATE_TAG]
  PROJECT_FOLDER_DATA:
    contentKey: config.xml
    ${OBJ_NAME}: ${JENKINS_FOLDER_TEMPLATE}
    path: ${OBJ_NAME}.yaml
    optional: 'true'
  PIPELINE_CONFIG_MAP_DATA:
    contentKey: ${OBJ_NAME}
    ${OBJ_NAME}: ${JENKINS_PIPELINE_TEMPLATE}
    path: ${OBJ_NAME}.yaml
    optional: 'true'
  JENKINS_SERVICEACCOUNT_NAME: jenkins

elCicdTemplates:
- templateName: configMap
  objName: ${PROJECT_ID}-jenkins-folder
  labels:
    teamid: ${TEAM_ID}
    projectid: ${PROJECT_ID}
    jenkins-folder: 'true'
  data: ${PROJECT_FOLDER_DATA}

- templateName: configMap
  objNames: ${BUILD_COMPONENT_PIPELINES}
  objName: ${PROJECT_ID}-${}-build-component
  labels: ${BUILD_COMPONENT_PIPELINE_LABELS}
  elCicdDefs:
    PIPELINE_PARAMS: ${BUILD_COMPONENT_PARAMS}
    EL_CICD_API_ARGS: |-
      def args = [${COMMON_BUILD_ARGS},
                  componentName: '${BASE_OBJ_NAME}',
                  deployToNamespace: params.DEPLOY_TO_NAMESPACE,
                  recreate: params.REINSTALL]
    EL_CICD_API_METHOD: buildComponent
    AUTH_TOKEN:
      ${PROJECT_ID}-${BASE_OBJ_NAME}-scm-repo-private-contentkey
  data: ${PIPELINE_CONFIG_MAP_DATA}

- templateName: configMap
  objNames: ${BUILD_ARTIFACT_PIPELINES}
  objName: ${PROJECT_ID}-${}-build-artifact
  labels: ${BUILD_ARTIFACT_PIPELINE_LABELS}
  elCicdDefs:
    PIPELINE_PARAMS: ${BUILD_ARTIFACT_PARAMS}
    EL_CICD_API_ARGS: |-
      def args = [${COMMON_BUILD_ARGS},
                  artifactName: '${BASE_OBJ_NAME}',
                  isSnapshot: params.IS_SNAPSHOT]
    EL_CICD_API_METHOD: buildArtifact
    AUTH_TOKEN:
      ${PROJECT_ID}-${BASE_OBJ_NAME}-scm-repo-private-contentkey
  data: ${PIPELINE_CONFIG_MAP_DATA}

- templateName: configMap
  objNames:
  - build-artifacts-and-components
  - promote-components
  - run-post-deployment-tests
  - redeploy-components
  - create-release-candidate
  - redeploy-release-candidate
  objName: ${#}-${PROJECT_ID}-${}
  labels: ${SHARED_PIPELINE_LABELS}
  elCicdDefs:
    EL_CICD_API_ARGS: |-
      def args = [teamId: '${TEAM_ID}',
                  projectId: '${PROJECT_ID}',
                  agent: el.cicd.JENKINS_AGENT_DEFAULT,
                  pipelineName: '${BASE_OBJ_NAME}',
                  ${EXTRA_ARGS}]
  elCicdDefs-build-artifacts-and-components:
    EL_CICD_API_METHOD: buildArtifactsAndComponents
  elCicdDefs-promote-components:
    EL_CICD_API_METHOD: promoteComponents
  elCicdDefs-run-post-deployment-tests:
    EL_CICD_API_METHOD: runSystemTests
  elCicdDefs-redeploy-components:
    EL_CICD_API_METHOD: redeployComponents
    EXTRA_ARGS: "redeployEnv: params.REDEPLOY_ENVIRONMENT"
    PIPELINE_PARAMS: |-
      choiceParam('REDEPLOY_ENVIRONMENT', [${REDEPLOY_ENV_CHOICES}], 'Environment to redeploy')
  elCicdDefs-create-release-candidate:
    EL_CICD_API_METHOD: createReleaseCandidate
    EXTRA_ARGS: "releaseCandidateTag: params.RELEASE_CANDIDATE_TAG"
    PIPELINE_PARAMS: ${RELEASE_CANDIDATE_PARAMS}
    RELEASE_CANDIDATE_TAG_DESCRIPTION: "Release Candidate Tag (WARNING: DO NOT prefix your tag with a 'v')"
  elCicdDefs-redeploy-release-candidate:
    EL_CICD_API_METHOD: redeployReleaseCandidate
    EXTRA_ARGS: "releaseCandidateTag: params.RELEASE_CANDIDATE_TAG"
    PIPELINE_PARAMS: ${RELEASE_CANDIDATE_PARAMS}
    RELEASE_CANDIDATE_TAG_DESCRIPTION: "Previously used release candidate tag for redeployment to the project pre-prod environment"
  data: ${PIPELINE_CONFIG_MAP_DATA}

- templateName: roleBinding
  objName: ${PROJECT_ID}-edit
  namespaces: ${CICD_NAMESPACES}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${JENKINS_SERVICEACCOUNT_NAME}
    namespace: ${RELEASE_NAMESPACE}
  - kind: Group
    name: ${${NAME_SPACE}_GROUP}

- templateName: copyResource
  objNames: ${EL_CICD_GIT_REPOS_READ_ONLY_KEYS}
  kind: Secret
  fromNamespace: ${EL_CICD_MASTER_NAMESPACE}
  toNamespace: ${RELEASE_NAMESPACE}

- templateName: copyResource
  objNames: ${NONPROD_ENVS}
  objName: el-cicd-${}-pull-secret
  kind: Secret
  fromNamespace: ${EL_CICD_MASTER_NAMESPACE}
  toNamespace: ${PROJECT_ID}-${BASE_OBJ_NAME}

- templateName: copyResource
  objNames: ${SANDBOX_ENVS}
  srcMetadataName: el-cicd-${DEV_ENV}-pull-secret
  kind: Secret
  fromNamespace: ${EL_CICD_MASTER_NAMESPACE}
  toNamespace: ${PROJECT_ID}-${BASE_OBJ_NAME}

- templateName: secret
  objNames: ${SCM_REPO_SSH_KEY_MODULE_IDS}
  labels:
    "jenkins.io/credentials-type": "basicSSHUserPrivateKey"
  stringData:
    username: "${OBJ_NAME}"
    privateKey: |-
      ${SCM_REPO_SSH_KEY}


