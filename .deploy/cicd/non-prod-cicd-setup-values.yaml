elCicdDefs-nonprod:
  BUILD_COMPONENT_PIPELINE_LABELS:
    projectid: ${PROJECT_ID}
    component: ${BASE_OBJ_NAME}
    jenkins-pipeline: 'true'
    jenkins-build-pipeline: 'true'
  BUILD_ARTIFACT_PIPELINE_LABELS:
    projectid: ${PROJECT_ID}
    artifact: ${BASE_OBJ_NAME}
    jenkins-pipeline: 'true'
    jenkins-build-pipeline: 'true'
  SHARED_PROJECT_PIPELINE_LABELS:
    projectid: ${PROJECT_ID}
    jenkins-pipeline: 'true'
    jenkins-shared-pipeline: 'true'
  COMMON_BUILD_ARGS: |-
    teamId: '${TEAM_ID}',
    projectId: '${PROJECT_ID}',
    agent: '${CODE_BASE}',
    isBuild: true,
    pipelineName: '${PIPELINE_NAME}',
    scmBranch: params.SCM_BRANCH
  SCM_BRANCH_BUILD_PARAM: |-
    stringParam('SCM_BRANCH', '${SCM_BRANCH}', 'Git branch/tag/hash to build')
  RELEASE_CANDIDATE_PARAMS: |-
    parameters {
      stringParam('RELEASE_CANDIDATE_TAG', null, "${RELEASE_CANDIDATE_TAG_DESCRIPTION}")
    }

elCicdTemplates:  
- templateName: configMap
  objNames: ${BUILD_COMPONENT_PIPELINES}
  objName: ${PROJECT_ID}-${}-build-component
  mustHaveEveryProfile:
  - nonprod
  labels: ${BUILD_COMPONENT_PIPELINE_LABELS}
  elCicdDefs:
    PIPELINE_NAME: ${BASE_OBJ_NAME}-build-component
    PIPELINE_PARAMS: |-
      parameters {
        ${SCM_BRANCH_BUILD_PARAM}
        choiceParam('DEPLOY_TO_NAMESPACE', ${BUILD_NAMESPACE_CHOICES}, 'Namespace to deploy to')
        booleanParam('REINSTALL', false, 'Uninstall ${BASE_OBJ_NAME} before deploying build?')
      }
    EL_CICD_API_ARGS: |-
      def args = [${COMMON_BUILD_ARGS},
                  componentName: '${BASE_OBJ_NAME}',
                  deployToNamespace: params.DEPLOY_TO_NAMESPACE,
                  recreate: params.REINSTALL]
    EL_CICD_API_METHOD: buildComponent
    AUTH_TOKEN:
      ${PROJECT_ID}-${BASE_OBJ_NAME}-scm-repo-private-contentkey
  data: ${PIPELINE_CONFIG_MAP_DATA}

- templateName: configMap
  objNames: ${BUILD_ARTIFACT_PIPELINES}
  objName: ${PROJECT_ID}-${}-build-artifact
  mustHaveEveryProfile:
  - nonprod
  labels: ${BUILD_ARTIFACT_PIPELINE_LABELS}
  elCicdDefs:
    PIPELINE_NAME: ${BASE_OBJ_NAME}-build-artifact
    PIPELINE_PARAMS: |-
      parameters {
        ${SCM_BRANCH_BUILD_PARAM}
        booleanParam('IS_SNAPSHOT', true, 'Is this a snapshot build?')
      }
    EL_CICD_API_ARGS: |-
      def args = [${COMMON_BUILD_ARGS},
                  artifactName: '${BASE_OBJ_NAME}',
                  isSnapshot: params.IS_SNAPSHOT]
    EL_CICD_API_METHOD: buildArtifact
    AUTH_TOKEN:
      ${PROJECT_ID}-${BASE_OBJ_NAME}-scm-repo-private-contentkey
  data: ${PIPELINE_CONFIG_MAP_DATA}

- templateName: configMap
  objNames:
  - 1-build-artifacts-and-components
  - 2-promote-components
  - 3-run-post-deployment-tests
  - 4-redeploy-components
  - 5-create-release-candidate
  - 6-redeploy-release-candidate
  objName: ${PROJECT_ID}-${}
  mustHaveEveryProfile:
  - nonprod
  labels: ${SHARED_PROJECT_PIPELINE_LABELS}
  elCicdDefs:
    PIPELINE_NAME: ${BASE_OBJ_NAME}
    EL_CICD_API_ARGS: |-
      def args = [teamId: '${TEAM_ID}',
                  projectId: '${PROJECT_ID}',
                  agent: el.cicd.JENKINS_AGENT_DEFAULT,
                  pipelineName: '${PIPELINE_NAME}',
                  ${EXTRA_PIPELINE_ARGS}]
  elCicdDefs-1-build-artifacts-and-components:
    EL_CICD_API_METHOD: buildArtifactsAndComponents
  elCicdDefs-2-promote-components:
    EL_CICD_API_METHOD: promoteComponents
  elCicdDefs-3-run-post-deployment-tests:
    EL_CICD_API_METHOD: runSystemTests
  elCicdDefs-4-redeploy-components:
    EL_CICD_API_METHOD: redeployComponents
    EXTRA_PIPELINE_ARGS: "redeployEnv: params.REDEPLOY_ENVIRONMENT"
    PIPELINE_PARAMS: |-
      parameters {
        choiceParam('REDEPLOY_ENVIRONMENT', ${REDEPLOY_ENV_CHOICES}, 'Environment to redeploy')
      }
  elCicdDefs-5-create-release-candidate:
    EL_CICD_API_METHOD: createReleaseCandidate
    EXTRA_PIPELINE_ARGS: "releaseCandidateTag: params.RELEASE_CANDIDATE_TAG"
    PIPELINE_PARAMS: ${RELEASE_CANDIDATE_PARAMS}
    RELEASE_CANDIDATE_TAG_DESCRIPTION: "Release Candidate Tag (WARNING: DO NOT prefix your tag with a 'v'"
  elCicdDefs-6-redeploy-release-candidate:
    EL_CICD_API_METHOD: redeployReleaseCandidate
    EXTRA_PIPELINE_ARGS: "releaseCandidateTag: params.RELEASE_CANDIDATE_TAG"
    PIPELINE_PARAMS: ${RELEASE_CANDIDATE_PARAMS}
    RELEASE_CANDIDATE_TAG_DESCRIPTION: "Previously used release candidate tag for redeployment to the project pre-prod environment"
  data: ${PIPELINE_CONFIG_MAP_DATA}

- templateName: roleBinding
  objName: ${PROJECT_ID}-edit
  mustHaveEveryProfile:
  - nonprod
  namespaces: ${CICD_NAMESPACES}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: ${RELEASE_NAMESPACE}
  - kind: Group
    name: ${${NAME_SPACE}_GROUP}

- templateName: copyResource
  objNames: ${NONPROD_ENVS}
  objName: el-cicd-${}-pull-secret
  kind: Secret
  fromNamespace: ${EL_CICD_MASTER_NAMESPACE}
  toNamespace: ${PROJECT_ID}-${BASE_OBJ_NAME}

- templateName: copyResource
  objNames: ${SANDBOX_ENVS}
  mustHaveEveryProfile:
  - nonprod
  srcMetadataName: el-cicd-${DEV_ENV}-pull-secret
  kind: Secret
  fromNamespace: ${EL_CICD_MASTER_NAMESPACE}
  toNamespace: ${PROJECT_ID}-${BASE_OBJ_NAME}
