elCicdDefs:
  PORT: "5000"
  REGISTRY_HTTP_ADDR: "0.0.0.0"
  MEMORY: 256Mi

elCicdDefs-htpasswd:
  ENV:
  - name: REGISTRY_AUTH
    value: htpasswd
  - name: REGISTRY_AUTH_HTPASSWD_REALM
    value: "Registry Realm"
  - name: REGISTRY_AUTH_HTPASSWD_PATH
    value: "/auth/htpasswd"
  - name: REGISTRY_HTTP_SECRET
    value: "elcicd-http-secret"
  VOLUME_MNT_HTPASSWD:
    name: auth-vol
    mountPath: "/auth"
    readOnly: true
  VOLUME_HTPASSWD:
    name: auth-vol
    secret:
      secretName: $<OBJ_NAME>
      
elCicdDefs-nfs:
  STORAGE_CLASS_NAME: demo-image-registry-nfs
  VOLUME_MNT_NFS:
    name: $<DEMO_IMAGE_REGISTRY>
    mountPath: /var/lib/registry
    subPath: $<OBJ_NAME>
  VOLUME_NFS:
    name: $<DEMO_IMAGE_REGISTRY>
    persistentVolumeClaim:
      claimName: $<DEMO_IMAGE_REGISTRY>-nfs-pvc

elCicdTemplates:
- templateName: deploymentServiceIngress
  objNames: $<OBJ_NAMES>
  image: registry
  port: $<PORT>
  env: $<ENV>
  volumeMounts:
  - $<VOLUME_MNT_HTPASSWD>
  - $<VOLUME_MNT_NFS>
  requestsMemory: $<MEMORY>
  limitsMemory: $<MEMORY>
  volumes:
  - $<VOLUME_HTPASSWD>
  - $<VOLUME_NFS>

- templateName: limitRange
  objName: demo-image-registry
  limits:
  - defaultRequest:
      cpu: 200m
    type: Container
  
- templateName: secret
  objNames: $<OBJ_NAMES>
  mustHaveAnyProfile:
  - htpasswd
  stringData:
    htpasswd: $<$<OBJ_NAME>_HTPASSWD>
    
- templateName: persistentVolume
  objName: $<DEMO_IMAGE_REGISTRY>-nfs
  mustHaveAnyProfile:
  - nfs
  storageClassName: $<STORAGE_CLASS_NAME>
  storageCapacity: 10Gi
  accessModes:
  - ReadWriteMany
  nfs:
    path: /mnt/$<DEMO_IMAGE_REGISTRY>
    server: $<HOST_IP>
    
- templateName: persistentVolumeClaim
  objName: $<DEMO_IMAGE_REGISTRY>-nfs-pvc
  mustHaveAnyProfile:
  - nfs
  storageClassName: $<STORAGE_CLASS_NAME>
  volumeName: $<DEMO_IMAGE_REGISTRY>-nfs
  accessMode: ReadWriteMany
  storageRequest: 10Gi
    
  
    


