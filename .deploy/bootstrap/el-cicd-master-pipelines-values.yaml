elCicdDefs:
  PIPELINE_NAMES:
  - onboard-team-cicd-server
  - refresh-team-cicd-servers
  JENKINS_PIPELINE_LABEL:
    jenkins-pipeline: 'true'
  PIPELINE_PARAMS: |-
    parameters {
      stringParam('TEAM_ID', null, 'Team ID')
    }
  EL_CICD_API_ARGS: |-
    teamId: params.TEAM_ID
    
elCicdDefs-nonprod:
  PIPELINE_PARAMS: |-
    parameters {
      stringParam('TEAM_ID', null, 'Team ID')
      ${EXTRA_PIPELINE_PARAMS}
    }
  PROJECT_ID_PIPELINE_PARAM: |-
    stringParam('PROJECT_ID', null, 'Comma delimited list of Project IDs; leave blank if create a team Prod deployment server')
  EL_CICD_API_ARGS: |-
    teamId: params.TEAM_ID,
    projectIds: params.PROJECT_ID,
  PIPELINE_NAMES:
  - onboard-team-cicd-server
  - refresh-team-cicd-servers
  - delete-team-project
  
elCicdDefs-onboard-team-cicd-server:
  PIPELINE_DESCRIPTION: 'Onboard or update a prod team CICD server for promotions and deployments'
  EL_CICD_API_METHOD: onboardTeamCicdServer

elCicdDefs-onboard-team-cicd-server-nonprod:
  PIPELINE_DESCRIPTION: 'Onboard or update a team CICD server and/or project'
  EXTRA_PIPELINE_PARAMS: |-
    ${PROJECT_ID_PIPELINE_PARAM}
    booleanParam('REBUILD_CICD_ENVS', false, 'Destroy and recreate CICD namespace environments for each project?')
  EL_CICD_API_ARGS: |-
    rebuildCicdEnvs: params.REBUILD_CICD_ENVS

elCicdDefs-refresh-team-cicd-servers:
  PIPELINE_DESCRIPTION: "Refresh all configuration and credentials for each team's CICD server"
  PIPELINE_PARAMS:
  EL_CICD_API_ARGS:
  EL_CICD_API_METHOD: refreshTeamCicdServers
  
elCicdDefs-refresh-team-cicd-servers-nonprod:
  PIPELINE_DESCRIPTION: "Refresh all configuration and credentials for each team's CICD server and/or projects"

elCicdDefs-delete-team-project-nonprod:
  PIPELINE_DESCRIPTION: "Delete a project from a CICD server [WARNING: All project pipelines, namespaces, and deployments will be removed from the cluster]"
  EXTRA_PIPELINE_PARAMS: ${PROJECT_ID_PIPELINE_PARAM}
  EL_CICD_API_METHOD: deleteTeamProject

elCicdTemplates-master-pipelines-defs:
- templateName: configMap
  objNames: ${PIPELINE_NAMES}
  labels: ${JENKINS_PIPELINE_LABEL}
  data: ${PIPELINE_CONFIG_MAP_DATA}