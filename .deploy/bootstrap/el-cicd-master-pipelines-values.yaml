elCicdDefs:
  PIPELINE_CONFIG_MAP_DATA:
    contentKey: ${OBJ_NAME}
    ${OBJ_NAME}: ${JENKINS_PIPELINE_DSL_TEMPLATE}
    path: ${OBJ_NAME}.yaml
  PIPELINE_NAMES:
  - create-or-update-team-cicd-server
  - refresh-team-cicd-servers
  - delete-team-cicd-server
  JENKINS_PIPELINE_LABEL:
    jenkins-pipeline: 'true'
  PIPELINE_PARAMS: |-
    parameters {
      stringParam('TEAM_ID', null, 'Team ID')
    }
  EL_CICD_API_ARGS: |-
    teamId: params.TEAM_ID
    
elCicdDefs-nonprod:
  PIPELINE_PARAMS: |-
    parameters {
      stringParam('TEAM_ID', null, 'Team ID')
      stringParam('PROJECT_IDS', null, 'Comma delimited list of Project IDs; leave blank if create a team Prod deployment server')
      ${EXTRA_PIPELINE_PARAMS}
    }
  EL_CICD_API_ARGS: |-
    teamId: params.TEAM_ID,
    projectIds: params.PROJECT_IDS,
  PIPELINE_NAMES:
  - create-or-update-team-cicd-server
  - update-team-cicd-servers-and-projects
  - delete-projects
  - delete-team-cicd-server
  
elCicdDefs-create-or-update-team-cicd-server:
  EL_CICD_API_METHOD: createOrUpdateTeamCicdServer

elCicdDefs-create-or-update-team-cicd-server-nonprod:
  EXTRA_PIPELINE_PARAMS: |-
    booleanParam('ONBOARD_ALL_PROJECTS', false, 'Create all projects defined for the team?')
    booleanParam('REBUILD_CICD_ENVS', false, 'Destroy and recreate CICD namespace environments for each project?')
  EL_CICD_API_ARGS: |-
    onboardAllProjects: params.ONBOARD_ALL_PROJECTS,
    rebuildCicdEnvs: params.REBUILD_CICD_ENVS

elCicdDefs-update-team-cicd-servers-and-projects:
  PIPELINE_PARAMS:
  EL_CICD_API_ARGS:
  EL_CICD_API_METHOD: updateTeamCicdServersAndProjects

elCicdDefs-delete-projects-nonprod:
  EL_CICD_API_METHOD: deleteProjects

elCicdDefs-delete-team-cicd-server:
  EL_CICD_API_METHOD: deleteTeamCicdServer

elCicdTemplates-master-pipelines-defs:
- templateName: configMap
  objNames: ${PIPELINE_NAMES}
  labels: ${JENKINS_PIPELINE_LABEL}
  data: ${PIPELINE_CONFIG_MAP_DATA}