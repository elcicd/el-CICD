############################################
##
## SPDX-License-Identifier: LGPL-2.1-or-later
##
############################################
elCicdDefs:  
  JENKINS_REMOTE_SERVICE_NAME: jenkins-remote

elCicdTemplates:  
- templateName: secret
  objName: $<JENKINS_REMOTE_SERVICE_NAME>
  type: kubernetes.io/service-account-token
  annotations:
    kubernetes.io/service-account.name: $<JENKINS_REMOTE_SERVICE_NAME>
  labels:
    elcicd.io/service-account.name: $<JENKINS_REMOTE_SERVICE_NAME>
    
- templateName: docker-registry-secret
  objNames: $<OCI_REGISTRY_IDS>
  objName: elcicd-$<>-registry-credentials
  username: $<REGISTRY_USERNAME>
  password: $<REGISTRY_PASSWORD>
  server: $<REGISTRY_URL>
  labels:
    elcicd-registry-credentials: $<BASE_OBJ_NAME>
    elcicd-image-registry-url: $<REGISTRY_URL>
    "jenkins.io/credentials-type": "usernamePassword"
  annotations:
    "jenkins.io/credentials-description" : "$<BASE_OBJ_NAME> image registry pull secret"
  stringData:
    username: $<REGISTRY_USERNAME>
    password: $<REGISTRY_PASSWORD>

- templateName: secret
  objNames: $<GIT_REPO_SSH_KEY_IDS>
  labels:
    "jenkins.io/credentials-type": "basicSSHUserPrivateKey"
  stringData:
    username: "$<OBJ_NAME>"
    privateKey: |-
      $<GIT_REPO_SSH_KEY>

- templateName: secret
  objName: $<GIT_ACCESS_TOKEN_ID>
  labels:
    "jenkins.io/credentials-type": "secretText"
  annotations:
    "jenkins.io/credentials-description" : "service account cluster admin access token"
  stringData:
    text: $<GIT_ACCESS_TOKEN>

- templateName: secret
  objName: $<BUILD_SECRETS_NAME>
  mustHaveAnyProfile:
  - builder-secrets
  labels:
    elcicd-builder-secret: $<BUILD_SECRETS_NAME>
  stringData: $<BUILDER_SECRET_FILES>

